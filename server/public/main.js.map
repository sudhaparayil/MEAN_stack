{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/auth.guard.ts","webpack:///./src/app/auth/auth.interceptor.ts","webpack:///./src/app/google-user/google-user.component.css","webpack:///./src/app/google-user/google-user.component.html","webpack:///./src/app/google-user/google-user.component.ts","webpack:///./src/app/my-profile/my-profile.component.css","webpack:///./src/app/my-profile/my-profile.component.html","webpack:///./src/app/my-profile/my-profile.component.ts","webpack:///./src/app/routes.ts","webpack:///./src/app/shared/user.service.ts","webpack:///./src/app/user-profile/user-profile.component.css","webpack:///./src/app/user-profile/user-profile.component.html","webpack:///./src/app/user-profile/user-profile.component.ts","webpack:///./src/app/user/sign-in/sign-in.component.css","webpack:///./src/app/user/sign-in/sign-in.component.html","webpack:///./src/app/user/sign-in/sign-in.component.ts","webpack:///./src/app/user/sign-up/sign-up.component.css","webpack:///./src/app/user/sign-up/sign-up.component.html","webpack:///./src/app/user/sign-up/sign-up.component.ts","webpack:///./src/app/user/user.component.css","webpack:///./src/app/user/user.component.html","webpack:///./src/app/user/user.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,mB;;;;;;;;;;;ACAA,oD;;;;;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAME,UAAK,GAAG,KAAK,CAAC;IAChB,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPzB,UAAU;AACgD;AACjB;AACI;AACE;AAC2B;AAC1E,YAAY;AACmC;AACO;AACa;AACU;AACV;AACnE,QAAQ;AAC6B;AACe;AACpD,OAAO;AACuC;AACY;AACgB;AACH;AAyBvE;IAAA;IAAyB,CAAC;IAAb,SAAS;QAvBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,kEAAa;gBACb,+EAAe;gBACf,yFAAoB;gBACpB,+EAAe;gBACf,uFAAmB;gBACnB,oFAAkB;aACnB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,0DAAW;gBACX,4DAAY,CAAC,OAAO,CAAC,kDAAS,CAAC;gBAC/B,qEAAgB;aACjB;YACD,SAAS,EAAE,CAAC;oBACV,OAAO,EAAE,sEAAiB;oBAC1B,QAAQ,EAAE,uEAAe;oBACzB,KAAK,EAAE,IAAI;iBACZ,EAAC,2DAAS,EAAC,iEAAW,CAAC;YACxB,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5CqB;AAGU;AACZ;AAKzC;IAEE,mBAAoB,WAAyB,EAAS,MAAe;QAAjD,gBAAW,GAAX,WAAW,CAAc;QAAS,WAAM,GAAN,MAAM,CAAS;IAAE,CAAC;IAExE,+BAAW,GAAX,UACE,IAA4B,EAC5B,KAA0B;QACxB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;YACnC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;YACpC,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC;YAC/B,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;QACH,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAbU,SAAS;QAHrB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAGkC,gEAAW,EAAkB,sDAAM;OAF1D,SAAS,CAcrB;IAAD,gBAAC;CAAA;AAdqB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRqB;AACN;AACI;AAEY;AAGrD;IAEI,yBAAoB,WAAyB,EAAS,MAAe;QAAjD,gBAAW,GAAX,WAAW,CAAc;QAAS,WAAM,GAAN,MAAM,CAAS;IAAE,CAAC;IAExE,mCAAS,GAAT,UAAU,GAAqB,EAAE,IAAiB;QAAlD,iBAkBC;QAhBG,EAAE,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YAC1B,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC;QACpC,IAAI,CAAC,CAAC;YACF,IAAM,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC;gBACxB,OAAO,EAAE,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;aACrF,CAAC,CAAC;YACH,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,IAAI,CAC9B,0DAAG,CACC,eAAK,IAAM,CAAC,EACZ,aAAG;gBACC,EAAE,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,CAAC,CAAC;oBAC1B,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;gBACxC,CAAC;YACL,CAAC,CAAC,CACT,CAAC;QACN,CAAC;IACL,CAAC;IAtBQ,eAAe;QAD3B,gEAAU,EAAE;yCAGyB,gEAAW,EAAkB,sDAAM;OAF5D,eAAe,CAuB3B;IAAD,sBAAC;CAAA;AAvB2B;;;;;;;;;;;;ACR5B,mB;;;;;;;;;;;ACAA,oD;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAClD,4DAA4D;AAC5D,wDAAwD;AAMxD;IACE,YAAY;IACb,YAAY;IACX;IAAgB,CAAC;IAClB,4GAA4G;IAC3G,sCAAQ,GAAR;QAEE,qDAAqD;QACvD,0BAA0B;QACxB,4BAA4B;QAC5B,KAAK;IACP,CAAC;IAXU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;;;SAG5B,CAAC;;OACW,mBAAmB,CAa/B;IAAD,0BAAC;CAAA;AAb+B;;;;;;;;;;;;ACRhC,mB;;;;;;;;;;;ACAA,mD;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,qCAAQ,GAAR;IACA,CAAC;IALU,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;;;SAG3B,CAAC;;OACW,kBAAkB,CAO9B;IAAD,yBAAC;CAAA;AAP8B;;;;;;;;;;;;;ACN/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsD;AACa;AACA;AACU;AAC/B;AAC4B;AAEH;AAChE,IAAM,SAAS,GAAW;IAC7B;QACI,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,kEAAa;QACxC,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,+EAAe,EAAE,CAAC;KACvD;IACD;QACI,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,kEAAa;QACvC,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,+EAAe,EAAE,CAAC;KACvD;IACD;QACI,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,yFAAoB,EAAC,WAAW,EAAC,CAAC,0DAAS,CAAC;KAC/E;IACD;QACI,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,mFAAkB;KAC5C;IACD;QACI,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,sFAAmB;KACxD;IACD;QACI,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM;KACpD;CACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9ByC;AAEoB;AAEF;AAM7D;IASE,qBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QARpC,iBAAY,GAAS;YACnB,QAAQ,EAAE,EAAE;YACZ,KAAK,EAAE,EAAE;YACT,QAAQ,EAAE,EAAE;SACb,CAAC;QAEF,iBAAY,GAAG,EAAE,OAAO,EAAE,IAAI,gEAAW,CAAC,EAAE,QAAQ,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC;IAE1B,CAAC;IAExC,aAAa;IAEd,8BAAQ,GAAR,UAAS,IAAU;QACjB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,qEAAW,CAAC,UAAU,GAAC,WAAW,EAAC,IAAI,EAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IACnF,CAAC;IAED,2BAAK,GAAL,UAAM,eAAe;QACnB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,qEAAW,CAAC,UAAU,GAAG,eAAe,EAAE,eAAe,EAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IACrG,CAAC;IAED,oCAAc,GAAd;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,qEAAW,CAAC,UAAU,GAAG,cAAc,CAAC,CAAC;IAChE,CAAC;IAGD,gBAAgB;IAEhB,8BAAQ,GAAR,UAAS,KAAa;QACpB,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IACvC,CAAC;IAED,8BAAQ,GAAR;QACE,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IACvC,CAAC;IAED,iCAAW,GAAX;QACE,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;IACnC,CAAC;IAED,oCAAc,GAAd;QACE,IAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC5B,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACV,IAAI,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC5C,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;QACjC,CAAC;QACD,IAAI;YACF,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IAED,gCAAU,GAAV;QACE,IAAI,WAAW,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;QACxC,EAAE,CAAC,CAAC,WAAW,CAAC;YACd,MAAM,CAAC,WAAW,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC;QAC7C,IAAI;YACF,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;IAxDU,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAU0B,+DAAU;OATzB,WAAW,CAyDvB;IAAD,kBAAC;CAAA;AAzDuB;;;;;;;;;;;;ACVxB,mB;;;;;;;;;;;ACAA,iQAAiQ,oCAAoC,8EAA8E,oCAAoC,0EAA0E,mBAAmB,wN;;;;;;;;;;;;;;;;;;;;;;;;;;ACAlc;AAEG;AACZ;AAQzC;IAGE,8BAAoB,WAAwB,EAAU,MAAc;QAAhD,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAEzE,uCAAQ,GAAR;QAAA,iBAUC;QATC,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC,SAAS,CACzC,aAAG;YACD,KAAI,CAAC,WAAW,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC;QACjC,CAAC,EACD,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAEnB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,uCAAQ,GAAR;QACE,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC;QAC/B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;IACnC,CAAC;IApBU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;;SAG7B,CAAC;yCAIiC,gEAAW,EAAkB,sDAAM;OAHzD,oBAAoB,CAsBhC;IAAD,2BAAC;CAAA;AAtBgC;;;;;;;;;;;;ACXjC,mB;;;;;;;;;;;ACAA,mWAAmW,yDAAyD,8TAA8T,4DAA4D,8VAA8V,qBAAqB,S;;;;;;;;;;;;;;;;;;;;;;;;;;ACAvlC;AAGT;AAEe;AAOxD;IAEE,yBAAoB,WAAwB,EAAS,MAAe;QAAhD,gBAAW,GAAX,WAAW,CAAa;QAAS,WAAM,GAAN,MAAM,CAAS;QAEpE,UAAK,GAAE;YACL,KAAK,EAAE,EAAE;YACT,QAAQ,EAAC,EAAE;SACZ,CAAC;QACF,eAAU,GAAG,yJAAyJ,CAAC;IAN/F,CAAC;IASzE,kCAAQ,GAAR;QACE,EAAE,EAAC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;YACjC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;IAC5C,CAAC;IAED,kCAAQ,GAAR,UAAS,IAAa;QAAtB,iBAUC;QATC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAC1C,aAAG;YACD,KAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;YACxC,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;QAC5C,CAAC,EACD,aAAG;YACD,KAAI,CAAC,mBAAmB,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC;QAC/C,CAAC,CACF,CAAC;IACJ,CAAC;IA1BU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;yCAGiC,gEAAW,EAAkB,sDAAM;OAFzD,eAAe,CA4B3B;IAAD,sBAAC;CAAA;AA5B2B;;;;;;;;;;;;ACZ5B,mB;;;;;;;;;;;ACAA,sWAAsW,4DAA4D,oUAAoU,yDAAyD,0eAA0e,4DAA4D,usBAAusB,qBAAqB,S;;;;;;;;;;;;;;;;;;;;;;;;;ACA/+D;AAIK;AAMvD;IAOE,yBAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAN5C,eAAU,GAAG,yJAAyJ,CAAC;QACvK,kBAAa,GAAG,gEAAgE,CAAC;IAKjC,CAAC;IAEjD,kCAAQ,GAAR;IACA,CAAC;IAED,kCAAQ,GAAR,UAAS,IAAY;QAArB,iBAeC;QAdC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAC7C,aAAG;YACD,KAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;YAC9B,UAAU,CAAC,cAAM,YAAI,CAAC,iBAAiB,GAAG,KAAK,EAA9B,CAA8B,EAAE,IAAI,CAAC,CAAC;YACvD,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QACvB,CAAC,EACD,aAAG;YACD,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,KAAK,GAAG,CAAC,CAAC,CAAC;gBACvB,KAAI,CAAC,mBAAmB,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACrD,CAAC;YACD,IAAI;gBACF,KAAI,CAAC,mBAAmB,GAAG,4CAA4C,CAAC;QAC5E,CAAC,CACF,CAAC;IACJ,CAAC;IAED,mCAAS,GAAT,UAAU,IAAY;QACpB,IAAI,CAAC,WAAW,CAAC,YAAY,GAAG;YAC9B,QAAQ,EAAE,EAAE;YACZ,KAAK,EAAE,EAAE;YACT,QAAQ,EAAE,EAAE;SACb,CAAC;QACF,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;IAChC,CAAC;IArCU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;yCAQiC,gEAAW;OAPjC,eAAe,CAsC3B;IAAD,sBAAC;CAAA;AAtC2B;;;;;;;;;;;;ACV5B,mB;;;;;;;;;;;ACAA,uU;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,gCAAQ,GAAR;IACA,CAAC;IALU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;;OACW,aAAa,CAOzB;IAAD,oBAAC;CAAA;AAPyB;;;;;;;;;;;;;ACP1B;AAAA;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,UAAU,EAAE,2BAA2B;CACxC,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","//build in\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule,HTTP_INTERCEPTORS } from '@angular/common/http';\n//components\nimport { AppComponent } from './app.component';\nimport { UserComponent } from './user/user.component';\nimport { SignUpComponent } from './user/sign-up/sign-up.component';\nimport { UserProfileComponent } from './user-profile/user-profile.component';\nimport { SignInComponent } from './user/sign-in/sign-in.component';\n//routes\nimport { appRoutes } from './routes';\nimport { UserService } from './shared/user.service';\n//other\nimport { AuthGuard } from './auth/auth.guard';\nimport { AuthInterceptor } from './auth/auth.interceptor';\nimport { GoogleUserComponent } from './google-user/google-user.component';\nimport { MyProfileComponent } from './my-profile/my-profile.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserComponent,\n    SignUpComponent,\n    UserProfileComponent,\n    SignInComponent,\n    GoogleUserComponent,\n    MyProfileComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    RouterModule.forRoot(appRoutes),\n    HttpClientModule\n  ],\n  providers: [{\n    provide: HTTP_INTERCEPTORS,\n    useClass: AuthInterceptor,\n    multi: true\n  },AuthGuard,UserService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { UserService } from \"../shared/user.service\";\nimport { Router } from \"@angular/router\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private userService : UserService,private router : Router){}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): boolean {\n      if (!this.userService.isLoggedIn()) {\n        this.router.navigateByUrl('/login');\n        this.userService.deleteToken();\n        return false;\n      }\n    return true;\n  }\n}","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from \"@angular/common/http\";\r\nimport { Injectable } from '@angular/core';\r\nimport { tap } from 'rxjs/operators';\r\nimport { Router } from \"@angular/router\";\r\n\r\nimport { UserService } from \"../shared/user.service\";\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n    constructor(private userService : UserService,private router : Router){}\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n\r\n        if (req.headers.get('noauth'))\r\n            return next.handle(req.clone());\r\n        else {\r\n            const clonedreq = req.clone({\r\n                headers: req.headers.set(\"Authorization\", \"Bearer \" + this.userService.getToken())\r\n            });\r\n            return next.handle(clonedreq).pipe(\r\n                tap(\r\n                    event => { },\r\n                    err => {\r\n                        if (err.error.auth == false) {\r\n                            this.router.navigateByUrl('/login');\r\n                        }\r\n                    })\r\n            );\r\n        }\r\n    }\r\n}","module.exports = \"\"","module.exports = \"<p>\\n  google-user works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n// import { Router, ActivatedRoute } from '@angular/router';\n// import { UserService } from '../shared/user.service';\n@Component({\n  selector: 'app-google-user',\n  templateUrl: './google-user.component.html',\n  styleUrls: ['./google-user.component.css']\n})\nexport class GoogleUserComponent implements OnInit {\n  // sub: any;\n\t// p_id: '';\n  constructor() { }\n\t// constructor( private userService: UserService, private router: Router, private route: ActivatedRoute) { }\n  ngOnInit() {\n\n    // this.sub = this.route.params.subscribe(params => {\n\t\t// \tthis.p_id = params.id;\n    //   console.log(this.p_id);\n    // })\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  my-profile works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-my-profile',\n  templateUrl: './my-profile.component.html',\n  styleUrls: ['./my-profile.component.css']\n})\nexport class MyProfileComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Routes } from '@angular/router';\r\nimport { UserComponent } from './user/user.component';\r\nimport { SignUpComponent } from './user/sign-up/sign-up.component';\r\nimport { SignInComponent } from './user/sign-in/sign-in.component';\r\nimport { UserProfileComponent } from './user-profile/user-profile.component';\r\nimport { AuthGuard } from './auth/auth.guard';\r\nimport { GoogleUserComponent } from './google-user/google-user.component';\r\n\r\nimport { MyProfileComponent } from './my-profile/my-profile.component';\r\nexport const appRoutes: Routes = [\r\n    {\r\n        path: 'signup', component: UserComponent,\r\n        children: [{ path: '', component: SignUpComponent }]\r\n    },\r\n    {\r\n        path: 'login', component: UserComponent,\r\n        children: [{ path: '', component: SignInComponent }]\r\n    },\r\n    {\r\n        path: 'userprofile', component: UserProfileComponent,canActivate:[AuthGuard]\r\n    },\r\n    {\r\n        path: 'my', component: MyProfileComponent\r\n    },\r\n    {\r\n        path: 'googleprofile', component: GoogleUserComponent\r\n    },\r\n    {\r\n        path: '', redirectTo: '/login', pathMatch: 'full'\r\n    }\r\n];","import { Injectable } from '@angular/core';\n\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { environment } from '../../environments/environment';\nimport { User } from './user.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  selectedUser: User = {\n    fullName: '',\n    email: '',\n    password: ''\n  };\n\n  noAuthHeader = { headers: new HttpHeaders({ 'NoAuth': 'True' }) };\n\n  constructor(private http: HttpClient) { }\n\n   //HttpMethods\n   \n  postUser(user: User){\n    return this.http.post(environment.apiBaseUrl+'/register',user,this.noAuthHeader);\n  }\n\n  login(authCredentials) {\n    return this.http.post(environment.apiBaseUrl + '/authenticate', authCredentials,this.noAuthHeader);\n  }\n\n  getUserProfile() {\n    return this.http.get(environment.apiBaseUrl + '/userProfile');\n  }\n\n\n  //Helper Methods\n\n  setToken(token: string) {\n    localStorage.setItem('token', token);\n  }\n\n  getToken() {\n    return localStorage.getItem('token');\n  }\n\n  deleteToken() {\n    localStorage.removeItem('token');\n  }\n\n  getUserPayload() {\n    var token = this.getToken();\n    if (token) {\n      var userPayload = atob(token.split('.')[1]);\n      return JSON.parse(userPayload);\n    }\n    else\n      return null;\n  }\n\n  isLoggedIn() {\n    var userPayload = this.getUserPayload();\n    if (userPayload)\n      return userPayload.exp > Date.now() / 1000;\n    else\n      return false;\n  }\n}\n","module.exports = \"\"","module.exports = \"<table *ngIf=\\\"userDetails\\\" class=\\\"table-fill\\\">\\n  <thead>\\n      <tr>\\n          <th colspan=\\\"2\\\" class=\\\"text-center\\\">User Profile</th>\\n      </tr>\\n  </thead>\\n  <tbody>\\n      <tr>\\n          <td>First Name</td>\\n          <td>{{userDetails.fullName.split(' ')[0]}}</td>\\n      </tr>\\n      <tr>\\n          <td>Last Name</td>\\n          <td>{{userDetails.fullName.split(' ')[1]}}</td>\\n      </tr>\\n      <tr>\\n          <td>Email</td>\\n          <td>{{userDetails.email}}</td>\\n      </tr>\\n      <tr>\\n          <td colspan=\\\"2\\\" class=\\\"text-center\\\">\\n              <input type=\\\"button\\\" (click)=\\\"onLogout()\\\" value=\\\"Logout\\\" />\\n          </td>\\n      </tr>\\n  </tbody>\\n</table>\"","import { Component, OnInit } from '@angular/core';\n\nimport { UserService } from '../shared/user.service';\nimport { Router } from \"@angular/router\";\n\n\n@Component({\n  selector: 'app-user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.css']\n})\nexport class UserProfileComponent implements OnInit {\n\n  userDetails;\n  constructor(private userService: UserService, private router: Router) { }\n\n  ngOnInit() {\n    this.userService.getUserProfile().subscribe(\n      res => {\n        this.userDetails = res['user'];\n      },\n      err => { \n        console.log(err);\n        \n      }\n    );\n  }\n\n  onLogout(){\n    this.userService.deleteToken();\n    this.router.navigate(['/login']);\n  }\n\n}","module.exports = \"\"","module.exports = \"<div>\\n  <img src=\\\"assets/img/single_user.png\\\" id=\\\"icon\\\" alt=\\\"User Icon\\\" />\\n</div>\\n<form #signInForm=\\\"ngForm\\\" (ngSubmit)=\\\"signInForm.valid && onSubmit(signInForm)\\\">\\n  <input type=\\\"text\\\" name=\\\"email\\\" #email=\\\"ngModel\\\" [(ngModel)]=\\\"model.email\\\" placeholder=\\\"Email\\\" [pattern]=\\\"emailRegex\\\" required\\n    [ngClass]=\\\"{'invalid-textbox' :signInForm.submitted && !email.valid }\\\">\\n  <div *ngIf=\\\"signInForm.submitted && email.errors?.pattern\\\">\\n    <label class=\\\"validation-message\\\">Invalid email address.</label>\\n  </div>\\n  <input type=\\\"password\\\" name=\\\"password\\\" #password=\\\"ngModel\\\" [(ngModel)]=\\\"model.password\\\" placeholder=\\\"Password\\\" required minlength=\\\"8\\\"\\n    [ngClass]=\\\"{'invalid-textbox' :signInForm.submitted && !password.valid }\\\">\\n  <div *ngIf=\\\"signInForm.submitted && password.errors?.minlength\\\">\\n    <label class=\\\"validation-message\\\">Minimum 8 characters.</label>\\n  </div>\\n  <input type=\\\"submit\\\" value=\\\"Sign In\\\">\\n</form>\\n<a class=\\\"google-btn\\\" href=\\\"/auth/google\\\">Google+</a>\\n<!-- Error message -->\\n<div class=\\\"alert\\\" *ngIf=\\\"serverErrorMessages\\\">\\n  {{serverErrorMessages}}\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\nimport { NgForm } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\n\nimport { UserService } from '../../shared/user.service';\n\n@Component({\n  selector: 'app-sign-in',\n  templateUrl: './sign-in.component.html',\n  styleUrls: ['./sign-in.component.css']\n})\nexport class SignInComponent implements OnInit {\n\n  constructor(private userService: UserService,private router : Router) { }\n\n  model ={\n    email :'',\n    password:''\n  };\n  emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  serverErrorMessages: string;\n\n  ngOnInit() {\n    if(this.userService.isLoggedIn())\n    this.router.navigateByUrl('/userprofile');\n  }\n\n  onSubmit(form : NgForm){\n    this.userService.login(form.value).subscribe(\n      res => {\n        this.userService.setToken(res['token']);\n        this.router.navigateByUrl('/userprofile');\n      },\n      err => {\n        this.serverErrorMessages = err.error.message;\n      }\n    );\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div>\\n  <img src=\\\"/assets/img/users.png\\\" id=\\\"icon\\\" alt=\\\"User Icon\\\" />\\n</div>\\n\\n<form #signUpForm=\\\"ngForm\\\" (ngSubmit)=\\\"signUpForm.valid && onSubmit(signUpForm)\\\">\\n  <input type=\\\"text\\\" #fullName=\\\"ngModel\\\" [(ngModel)]=\\\"userService.selectedUser.fullName\\\" name=\\\"fullName\\\" placeholder=\\\"Full Name\\\"\\n  required  [ngClass]=\\\"{'invalid-textbox' :signUpForm.submitted && !fullName.valid }\\\">\\n  <div *ngIf=\\\"signUpForm.submitted && !fullName.valid\\\">\\n    <label class=\\\"validation-message\\\">This field is required.</label>\\n  </div>\\n  <input type=\\\"text\\\" #email=\\\"ngModel\\\" [(ngModel)]=\\\"userService.selectedUser.email\\\" name=\\\"email\\\" placeholder=\\\"Email\\\"\\n  required [pattern]=\\\"emailRegex\\\"  [ngClass]=\\\"{'invalid-textbox' :signUpForm.submitted && !email.valid }\\\">\\n  <div *ngIf=\\\"signUpForm.submitted && email.errors\\\">\\n    <label *ngIf=\\\"email.errors.required\\\" class=\\\"validation-message\\\">This field is required.</label>\\n    <label *ngIf=\\\"email.errors.pattern\\\" class=\\\"validation-message\\\">Invalid email address.</label>\\n  </div>\\n  <input type=\\\"password\\\" #password=\\\"ngModel\\\" [(ngModel)]=\\\"userService.selectedUser.password\\\" name=\\\"password\\\" placeholder=\\\"Password\\\"\\n  minlength=\\\"8\\\" required [pattern]=\\\"passwordRegex\\\" [ngClass]=\\\"{'invalid-textbox' :signUpForm.submitted && !password.valid }\\\">\\n  <div *ngIf=\\\"signUpForm.submitted && password.errors\\\">\\n    <label *ngIf=\\\"password.errors.required\\\" class=\\\"validation-message\\\">This field is required.</label>\\n    <label *ngIf=\\\"password.errors.minlength\\\" class=\\\"validation-message\\\">Enter atleast 8 characters.</label>\\n    <label *ngIf=\\\"password.errors.pattern\\\" class=\\\"validation-message\\\">Minimum eight characters, at least one letter, one number and one special character.</label>\\n  </div>\\n  <input type=\\\"submit\\\" value=\\\"Sign Up\\\">\\n</form>\\n\\n<!-- Success message -->\\n<div class=\\\"success\\\" *ngIf=\\\"showSucessMessage\\\">\\n  Saved successfully\\n</div>\\n\\n<!-- Error message -->\\n<div class=\\\"alert\\\" *ngIf=\\\"serverErrorMessages\\\">\\n  {{serverErrorMessages}}\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\nimport { NgForm } from '@angular/forms';\n\nimport { UserService } from '../../shared/user.service'\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.css']\n})\nexport class SignUpComponent implements OnInit {\n  emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  passwordRegex = /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/;\n  showSucessMessage: boolean;\n  serverErrorMessages: string;\n\n\n  constructor(private userService: UserService) { }\n\n  ngOnInit() {\n  }\n\n  onSubmit(form: NgForm) {\n    this.userService.postUser(form.value).subscribe(\n      res => {\n        this.showSucessMessage = true;\n        setTimeout(() => this.showSucessMessage = false, 4000);\n        this.resetForm(form);\n      },\n      err => {\n        if (err.status === 422) {\n          this.serverErrorMessages = err.error.join('<br/>');\n        }\n        else\n          this.serverErrorMessages = 'Something went wrong.Please contact admin.';\n      }\n    );\n  }\n\n  resetForm(form: NgForm) {\n    this.userService.selectedUser = {\n      fullName: '',\n      email: '',\n      password: ''\n    };\n    form.resetForm();\n    this.serverErrorMessages = '';\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"wrapper\\\">\\n  <div id=\\\"formContent\\\">\\n    <h2 class=\\\"underlineHover\\\"  routerLink=\\\"/login\\\"  routerLinkActive=\\\"active\\\"> Sign In </h2>\\n    <h2 class=\\\"underlineHover\\\"  routerLink=\\\"/signup\\\"  routerLinkActive=\\\"active\\\">Sign Up </h2>\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiBaseUrl: 'http://localhost:3000/api'\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}